---
- hosts: localhost
  tasks:
    - name: Create product osp
      dci_product:
        name: osp
      register: product_osp

    - name: Create the OSPX topic
      dci_topic:
        name: OSPX
        product_id: "{{ product_osp.product.id }}"
        component_types:
          - osp_puddles
      register: ospx_topic

    - name: Create a DCI Component
      dci_component:
        name: OSP10-2017.10.08
        type: osp_puddles
        topic_id: '{{ ospx_topic.topic.id }}'
        active: False
      register: ospx_component

    - name: Retrieve ospx component
      dci_component:
        id: '{{ ospx_component.component.id }}'
      register: ospx_component

    - name: Set a tag on the ospx component
      dci_component:
        id: '{{ ospx_component.component.id }}'
        url: 'https://www.redhat.com/'
        data:
          key: 'value'
        tags:
          - tag
      register: ospx_component

    - name: Ensure ospx component exists
      assert:
        that:
          - ospx_component.component.name == 'OSP10-2017.10.08'
          - ospx_component.component.state == 'inactive'
          - ospx_component.component.tags == ['tag']
          - ospx_component.component.url == 'https://www.redhat.com/'
          - "{{ ospx_component.component.data == {'key': 'value'} }}"

    - name: Update ospx component
      dci_component:
        id: '{{ ospx_component.component.id }}'
        active: True

    - name: Retrieve ospx component
      dci_component:
        id: '{{ ospx_component.component.id }}'
      register: ospx_component

    - name: Create a second Component
      dci_component:
        name: Linux
        type: linux
        topic_id: '{{ ospx_topic.topic.id }}'
        active: True
      register: other_component

    - name: search components and sort result
      dci_component:
        state: search
        topic_id: '{{ ospx_topic.topic.id }}'
        sort: name
      register: list_components

    - name: assert components sorted by name
      ansible.builtin.assert:
        that:
          - "list_components.components[0].name == 'Linux'"
        msg: "first component myst be Linux"

    - name: Delete ospx component
      dci_component:
        id: '{{ ospx_component.component.id }}'
        state: absent

    - name: Delete ospx topic
      dci_topic:
        id: '{{ ospx_topic.topic.id }}'
        state: absent
