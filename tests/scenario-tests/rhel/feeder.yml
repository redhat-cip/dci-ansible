---
- hosts: localhost
  become: True
  become_flags: '-E'
  tasks:
    - name: Retrieve topics
      dci_topic:
        where: "name:RHEL-7.8"
      register: _topics

    - name: Create new RHEL component
      dci_component:
        name: "{{ _topics.topics[0].name }}.6-20180809.n.0"
        type: Compose
        canonical_project_name: "{{ _topics.topics[0].name }}.6-20180809.n.0"
        url: https://www.example.com
        topic_id: '{{ _topics.topics[0].id }}'
      register: rhel_component

    - name: Create new hwcert component
      dci_component:
        name: hwcert-20180809
        type: hwcert
        topic_id: '{{ _topics.topics[0].id }}'
      register: hwcert_component

    - name: Create new extras component
      dci_component:
        name: extras-20180809
        type: extras
        topic_id: '{{ _topics.topics[0].id }}'
      register: extras_component

    - name: Ensure repository directories exists
      file:
        state: directory
        recurse: yes
        path: '/repo/{{ _topics.topics[0].product_id }}/{{ _topics.topics[0].id }}/{{ item.id }}/{{ item.path }}'
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: system_u
      with_items:
        - {'id': '{{ rhel_component.component.id }}', 'path': 'Packages'}
        - {'id': '{{ rhel_component.component.id }}', 'path': 'LiveOS'}
        - {'id': '{{ rhel_component.component.id }}', 'path': 'images/pxeboot'}
        - {'id': '{{ hwcert_component.component.id }}', 'path': 'Packages'}
        - {'id': '{{ extras_component.component.id }}', 'path': 'Packages'}

    - name: Ensure required images exists
      file:
        state: touch
        path: '/repo/{{ _topics.topics[0].product_id }}/{{ _topics.topics[0].id }}/{{ rhel_component.component.id }}/{{ item.path }}/{{ item.name }}'
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: system_u
      with_items:
        - {'name': 'squashfs.img', 'path': 'LiveOS'}
        - {'name': 'boot.iso', 'path': 'images'}
        - {'name': 'efiboot.img', 'path': 'images'}
        - {'name': 'initrd.img', 'path': 'images/pxeboot'}
        - {'name': 'upgrade.img', 'path': 'images/pxeboot'}
        - {'name': 'vmlinuz', 'path': 'images/pxeboot'}

    - name: Create .treeinfo file
      copy:
        dest: '/repo/{{ _topics.topics[0].product_id }}/{{ _topics.topics[0].id }}/{{ rhel_component.component.id }}/.treeinfo'
        content: |
          [checksums]
          LiveOS/squashfs.img = sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          images/boot.iso = sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          images/pxeboot/initrd.img = sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          images/pxeboot/upgrade.img = sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          images/pxeboot/vmlinuz = sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: system_u

    - name: Install createrepo
      package:
        name: createrepo

    - name: Retrieve a dummy package
      get_url:
        url: https://packages.distributed-ci.io/dci-release.el7.noarch.rpm
        dest: '/repo/{{ _topics.topics[0].product_id }}/{{ _topics.topics[0].id }}/{{ item }}/Packages/dci-release.el7.noarch.rpm'
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: system_u
      with_items:
        - '{{ rhel_component.component.id }}'
        - '{{ hwcert_component.component.id }}'
        - '{{ extras_component.component.id }}'

    - name: Create repodata
      shell: createrepo .
      args:
        chdir: '/repo/{{ _topics.topics[0].product_id }}/{{ _topics.topics[0].id }}/{{ item }}'
      with_items:
        - '{{ rhel_component.component.id }}'
        - '{{ hwcert_component.component.id }}'
        - '{{ extras_component.component.id }}'
