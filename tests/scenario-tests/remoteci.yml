---
- hosts: localhost
  tasks:
    - name: schedule a job
      dci_job:
        topic: OSP12
      register: job_informations

    - name: Set global variables
      set_fact:
        job_id: '{{ hostvars.localhost.job_informations.job_id  }}'
        components: '{{ hostvars.localhost.job_informations.components  }}'

- hosts: localhost
  vars:
    dci_status: running
  tasks:
    - name: echo runnning
      command: echo "running"

- hosts: localhost
  vars:
    dci_status: post-run
  tasks:
    - name: Attach result to job
      dci_file:
        job_id: '{{ job_id }}'
        path: "{{ lookup('env', 'PWD')  }}/data/content"
        name: content

- hosts: localhost
  vars:
    dci_status: success
  tasks:
    - name: echo success
      command: echo "success"


- hosts: localhost
  tasks:
    - name: Ensure job_id has proper file and jobstates attached to it
      dci_job:
        id: '{{ job_id }}'
        embed: files,jobstates
      register: job_informations

    - name: Verify that job has 6 files attached
      assert:
        that: job_informations.job.files|length == 6

- hosts: localhost
  tasks:
    - name: Request an update job
      dci_job:
        id: '{{ job_id }}'
        update: True
      register: job_informations

    - name: Show up some message
      debug:
        msg: some message

    - name: Verify that update previous job id is correctly set
      assert:
        that:
          - job_informations.job.update_previous_job_id == '{{ job_id }}'
          - job_informations.job.id is defined

- hosts: localhost
  tasks:
    - name: Request an upgrade job
      dci_job:
        id: '{{ job_id }}'
        upgrade: True
      register: job_informations

    - name: Ensure job_id has proper files attached to it
      dci_job:
        id: '{{ hostvars.localhost.job_informations.job.id  }}'
        embed: files,jobstates
      register: job_informations

    - name: Verify that job has just 1 file attached to it
      assert:
        that: job_informations.job.files|length == 1

    - name: Request a refresh keys
      dci_keys:
        remoteci_id: '{{ osp13_remoteci.remoteci.id }}'
      register: keys

    - name: Verify that keys are well setup
      assert:
        that: keys.key is defined


- hosts: localhost
  tasks:
    - name: Set the metadata
      dci_job:
        id: '{{ job_id }}'
        metadata:
          "foo": "bar"
          "release": "queens"
          "openvswitch": "2.7.1"
      register: job_informations

    - name: Verify that job has 3 metadatas
      assert:
        that: job_informations.job.metas|length == 3

